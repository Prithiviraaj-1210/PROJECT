# -*- coding: utf-8 -*-
"""HerFlowMateBot_FINAL

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1c8UTcWsBwoClKBH6k-BR3fJKWXliiaB5
"""






import torch
from transformers import RagTokenizer, RagTokenForGeneration
from langchain.embeddings import SentenceTransformerEmbeddings
from langchain.chains import RetrievalQA
from langchain.document_loaders import CSVLoader
import pandas as pd
from langchain.llms import LlamaCpp
import os



llm = LlamaCpp (
    model_path="/content/drive/MyDrive/BioMistral-7B.Q2_K.gguf",
    temperature=0.2,
    max_tokens=2048,
    top_p=1
)

os.environ['HUGGINGFACEHUB_API_TOKEN'] = "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"

tokenizer = RagTokenizer.from_pretrained("facebook/rag-token-nq")
model = RagTokenForGeneration.from_pretrained("facebook/rag-token-nq")

device = "cuda" if torch.cuda.is_available() else "cpu"
model = model.to(device)

df_menstrual = pd.read_csv('/content/drive/MyDrive/period - Copy.csv')
df_health = pd.read_csv('/content/drive/MyDrive/Menstruation Data.csv')
df_cycle = pd.read_csv('/content/drive/MyDrive/Menstural_cyclelength.csv')
df_pcos = pd.read_csv('/content/drive/MyDrive/PCOS_infertility.csv')
df_training = pd.read_csv('/content/drive/MyDrive/Training Data.csv')
df_testing = pd.read_csv('/content/drive/MyDrive/Testing Data.csv')

combined_data = pd.concat([df_menstrual, df_health, df_cycle,df_pcos, df_training,df_testing   ], ignore_index=True)

documents = combined_data.to_dict(orient='records')

def simple_retriever(query):
    # A simple approach could be to find documents that contain the query keyword
    relevant_docs = [doc for doc in documents if query.lower() in str(doc).lower()]
    return relevant_docs if relevant_docs else ["No relevant documents found."]

def generate_response(question):
    input_ids = tokenizer(question, return_tensors="pt").input_ids.to(device)
    generated = model.generate(input_ids)
    response = tokenizer.batch_decode(generated, skip_special_tokens=True)
    return response[0]

import random

def analyze_cycle_and_provide_insights(questionnaire_data):
    # Dummy probabilities for conditions based on the questionnaire_data
    # In a real scenario, this logic should be based on medical guidelines or research
    probabilities = {
        "PCOD": 0.0,
        "PMS": 0.0,
        "PMDD": 0.0,
        "Ovarian Cancer": 0.0,
        "Breast Cancer": 0.0
    }

    # Analyze based on user input
    if questionnaire_data["food_habits"] in ["Vegetarian", "Vegan"] and questionnaire_data["acne"] in ["Often", "Always"]:
        probabilities["PCOD"] += 0.3

    if questionnaire_data["heavy_flow"] in ["Often", "Always"]:
        probabilities["PMS"] += 0.4

    if questionnaire_data["work_stress"] in ["D", "E"]:
        probabilities["PMDD"] += 0.5

    if questionnaire_data["age_menarche"] in ["Before 10", "10-12"]:
        probabilities["Ovarian Cancer"] += 0.2

    if questionnaire_data["family_health_issues"] == "Yes" and questionnaire_data["heaviness_breast"] in ["Often", "Always"]:
        probabilities["Breast Cancer"] += 0.3

    # Normalize probabilities to ensure they are out of 1
    total_probability = sum(probabilities.values())
    if total_probability > 0:
        for condition in probabilities:
            probabilities[condition] = round((probabilities[condition] / total_probability) * 100, 2)
    else:
        probabilities = {key: 0 for key in probabilities}  # No risk factors detected

    return probabilities

def get_questionnaire_input():
    # Collecting user input for health and lifestyle
    print("Please answer the following questions (choose A, B, C, D, or E):")

    heart_rate = input("What is your average heart rate?\nA. Less than 60 bpm\nB. 60-70 bpm\nC. 70-80 bpm\nD. 80-90 bpm\nE. More than 90 bpm\nYour answer: ")
    body_temp = input("What is your average body temperature?\nA. Less than 36°C\nB. 36°C - 36.5°C\nC. 36.5°C - 37°C\nD. 37°C - 37.5°C\nE. More than 37.5°C\nYour answer: ")
    sleep_hours = input("How many hours do you sleep on average?\nA. Less than 5 hours\nB. 5-6 hours\nC. 6-7 hours\nD. 7-8 hours\nE. More than 8 hours\nYour answer: ")
    work_stress = input("On a scale of 1 to 10, how stressed do you feel at work?\nA. 1 (Not at all stressed)\nB. 2-4 (Mild stress)\nC. 5-6 (Moderate stress)\nD. 7-8 (High stress)\nE. 9-10 (Extreme stress)\nYour answer: ")
    hair_fall = input("How many hair strands fall daily? (approx)\nA. Less than 10 strands\nB. 10-20 strands\nC. 20-30 strands\nD. 30-40 strands\nE. More than 40 strands\nYour answer: ")

    # Retaining 12 choices for food habits
    print("Food habits:\nA. Vegetarian\nB. Non-Vegetarian\nC. Vegan\nD. Pescatarian\nE. Flexitarian\nF. Gluten-Free\nG. Dairy-Free\nH. Raw Food\nI. Paleo\nJ. Keto\nK. Mediterranean\nL. Whole30")
    food_habits = input("Select your food habit (A/B/C/D/E/F/G/H/I/J/K/L): ")

    meals_per_day = input("How many meals do you eat per day?\nA. 1 meal\nB. 2 meals\nC. 3 meals\nD. 4 meals\nE. More than 4 meals\nYour answer: ")

    # Retaining 10 choices for mood
    print("Mood choices:\nA. Happy\nB. Sad\nC. Anxious\nD. Irritable\nE. Overwhelmed\nF. Relaxed\nG. Excited\nH. Frustrated\nI. Tired\nJ. Content")
    mood_swings = input("Select your mood (A/B/C/D/E/F/G/H/I/J): ")

    acne = input("Do you experience acne?\nA. Never\nB. Occasionally\nC. Sometimes\nD. Often\nE. Always\nYour answer: ")
    abdominal_pain = input("Do you experience abdominal pain?\nA. Never\nB. Occasionally\nC. Sometimes\nD. Often\nE. Always\nYour answer: ")
    screen_time = input("How many hours do you spend on screens daily?\nA. Less than 1 hour\nB. 1-2 hours\nC. 2-3 hours\nD. 3-4 hours\nE. More than 4 hours\nYour answer: ")
    heaviness_breast = input("Do you feel breast heaviness?\nA. Never\nB. Occasionally\nC. Sometimes\nD. Often\nE. Always\nYour answer: ")
    heavy_flow = input("Do you experience heavy flow during your period?\nA. Never\nB. Occasionally\nC. Sometimes\nD. Often\nE. Always\nYour answer: ")
    thirst = input("Do you feel excessively thirsty?\nA. Never\nB. Occasionally\nC. Sometimes\nD. Often\nE. Always\nYour answer: ")
    hunger = input("Do you experience unusual hunger?\nA. Never\nB. Occasionally\nC. Sometimes\nD. Often\nE. Always\nYour answer: ")

    food_cravings = input("Do you have food cravings?\nA. Never\nB. Occasionally\nC. Sometimes\nD. Often\nE. Always\nYour answer: ")
    past_health_issues = input("Do you have any past health issues?\nA. No\nB. Mild issues\nC. Moderate issues\nD. Severe issues\nE. Chronic issues\nYour answer: ")

    cycle_length = input("What is the average length of your menstrual cycle?\nA. Less than 21 days\nB. 21-25 days\nC. 26-30 days\nD. 31-35 days\nE. More than 35 days\nYour answer: ")
    cycle_frequency = input("How often does your cycle occur?\nA. Irregularly\nB. Every 21 days\nC. Every 28 days\nD. Every 30 days\nE. Every 35 days\nYour answer: ")
    age_menarche = input("At what age did you start your period- Menarche ?\nA. Before 10\nB. 10-12\nC. 13-15\nD. 16-18\nE. After 18\nYour answer: ")

    family_health_issues = input("Do you have a family history of health issues related to women's health (Yes/No)? ")

    # Creating a dictionary to hold the collected data
    questionnaire_data = {
        "heart_rate": heart_rate,
        "body_temp": body_temp,
        "sleep_hours": sleep_hours,
        "work_stress": work_stress,
        "hair_fall": hair_fall,
        "food_habits": ["Vegetarian", "Non-Vegetarian", "Vegan", "Pescatarian", "Flexitarian", "Gluten-Free", "Dairy-Free", "Raw Food", "Paleo", "Keto", "Mediterranean", "Whole30"][ord(food_habits) - ord('A')],
        "meals_per_day": meals_per_day,
        "acne": acne,
        "abdominal_pain": abdominal_pain,
        "screen_time": screen_time,
        "heaviness_breast": heaviness_breast,
        "heavy_flow": heavy_flow,
        "thirst": thirst,
        "hunger": hunger,
        "mood_swings": ["Happy", "Sad", "Anxious", "Irritable", "Overwhelmed", "Relaxed", "Excited", "Frustrated", "Tired", "Content"][ord(mood_swings) - ord('A')],
        "food_cravings": food_cravings,
        "past_health_issues": past_health_issues,
        "cycle_length": cycle_length,
        "cycle_frequency": cycle_frequency,
        "age_menarche": age_menarche,
        "family_health_issues": family_health_issues
    }

    return questionnaire_data

import random

# Function to analyze the questionnaire data and provide insights
def analyze_cycle_and_provide_insights(questionnaire_data):
    # Dummy probability calculation for demonstration
    probabilities = {
        "PCOD": random.uniform(0, 1),
        "PMDD": random.uniform(0, 1),
        "PMS": random.uniform(0, 1),
        "Ovarian Cancer": random.uniform(0, 1),
        "Breast Cancer": random.uniform(0, 1)
    }

    return probabilities

questionnaire_data = get_questionnaire_input()
probabilities = analyze_cycle_and_provide_insights(questionnaire_data)
print("\nProbability of conditions based on your responses:")
for condition, probability in probabilities.items():
    print(f"{condition}: {probability}%")

def provide_comforting_words(probabilities):
    # Provide comforting words, lifestyle advice, and statistics
    # [Messages code remains the same...]

    return comforting_words

comforting_words = provide_comforting_words(probabilities)

print("\n### Comforting Words ###")
for message in comforting_words:
    print(message)

def provide_additional_info(topic):
    # Provide general tips for menstrual cycle phases and hygiene tips
    additional_info = {
        "Menstrual Cycle Phases": {
            "description": "The menstrual cycle consists of four phases: Menstrual Phase, Follicular Phase, Ovulation, and Luteal Phase.",
            "tips": [
                "Menstrual Phase: Use appropriate hygiene products like pads or tampons and stay hydrated.",
                "Follicular Phase: Focus on nutrition and consider light exercises to boost your energy levels.",
                "Ovulation: Maintain a balanced diet and stay active to support your overall health.",
                "Luteal Phase: Prepare for PMS symptoms by managing stress and eating well."
            ]
        },
        "Hygiene Tips": {
            "description": "Proper menstrual hygiene is crucial for health and comfort.",
            "tips": [
                "Change pads/tampons every 4-6 hours.",
                "Wash your hands before and after changing menstrual products.",
                "Consider using menstrual cups or period panties for more sustainable options.",
                "Stay clean and dry to avoid infections."
            ]
        },
        "How to Tackle Problems": {
            "description": "Here are some common menstrual problems and how to address them.",
            "tips": [
                "For cramps, consider heating pads or over-the-counter pain relief.",
                "If experiencing heavy flow, keep track of your cycle and consult a doctor if it’s excessive.",
                "For mood swings, practice mindfulness and relaxation techniques.",
                "Maintain a healthy lifestyle to reduce the severity of symptoms."
            ]
        }
    }

    if topic in additional_info:
        info = additional_info[topic]
        tips = "\n".join(additional_info[topic]['tips'])
        return f"{additional_info[topic]['description']}\nTips:\n{tips}"
    else:
        return "No additional information available for the specified topic."

def provide_additional_info(topic):
    # Provide general tips for menstrual cycle phases and hygiene tips
    additional_info = {
        "Menstrual Cycle Phases": {
            "description": "The menstrual cycle consists of four phases: Menstrual Phase, Follicular Phase, Ovulation, and Luteal Phase.",
            "tips": [
                "Menstrual Phase: Use appropriate hygiene products like pads or tampons and stay hydrated.",
                "Follicular Phase: Focus on nutrition and consider light exercises to boost your energy levels.",
                "Ovulation: Maintain a balanced diet and stay active to support your overall health.",
                "Luteal Phase: Prepare for PMS symptoms by managing stress and eating well."
            ]
        },
        "Hygiene Tips": {
            "description": "Proper menstrual hygiene is crucial for health and comfort.",
            "tips": [
                "Change pads/tampons every 4-6 hours.",
                "Wash your hands before and after changing menstrual products.",
                "Consider using menstrual cups or period panties for more sustainable options.",
                "Stay clean and dry to avoid infections."
            ]
        },
        "How to Tackle Problems": {
            "description": "Here are some common menstrual problems and how to address them.",
            "tips": [
                "For cramps, consider heating pads or over-the-counter pain relief.",
                "If experiencing heavy flow, keep track of your cycle and consult a doctor if it’s excessive.",
                "For mood swings, practice mindfulness and relaxation techniques.",
                "Maintain a healthy lifestyle to reduce the severity of symptoms."
            ]
        }
    }

    if topic in additional_info:
        info = additional_info[topic]
        tips = "\n".join(additional_info[topic]['tips'])
        return f"{additional_info[topic]['description']}\nTips:\n{tips}"
    else:
        return "No additional information available for the specified topic."

# Function to provide comforting words based on the probabilities of conditions
def provide_comforting_words(probabilities):
    comforting_words = []
    messages = {
        "PCOD": {
            "description": "Polycystic Ovary Disease (PCOD) can be managed with lifestyle changes.",
            "lifestyle_advice": "Maintain a healthy diet and regular exercise.",
            "statistics": "1 in 10 women have PCOD."
        },
        "PMDD": {
            "description": "Premenstrual Dysphoric Disorder (PMDD) can significantly affect mood.",
            "lifestyle_advice": "Consider mindfulness practices and consult a healthcare professional.",
            "statistics": "PMDD affects about 3-8% of women in their reproductive years."
        },
        "PMS": {
            "description": "Premenstrual Syndrome (PMS) is common and can be managed.",
            "lifestyle_advice": "Regular exercise and a balanced diet can help alleviate symptoms.",
            "statistics": "Approximately 50-80% of menstruating women experience PMS."
        },
        "Ovarian Cancer": {
            "description": "Early detection is key in managing ovarian cancer.",
            "lifestyle_advice": "Regular check-ups and awareness of family history are important.",
            "statistics": "About 1 in 78 women will be diagnosed with ovarian cancer."
        },
        "Breast Cancer": {
            "description": "Breast cancer can often be treated successfully if caught early.",
            "lifestyle_advice": "Regular mammograms and self-exams can aid in early detection.",
            "statistics": "1 in 8 women will be diagnosed with breast cancer in their lifetime."
        }
    }

    for condition, probability in probabilities.items():
        if probability > 0:
            comforting_words.append(
                f"For {condition}, you have a probability of {probability}%. {messages[condition]['description']} "
                f"Advice: {messages[condition]['lifestyle_advice']} "
                f"Note: {messages[condition]['statistics']}"
            )

    return comforting_words

def provide_additional_info(user_query):
    user_query = user_query.lower()

    if user_query == "menstrual cycle phases":
        return ("The menstrual cycle has several phases:\n"
                "1. **Menstrual Phase**: Shedding of the uterine lining (Days 1-5).\n"
                "2. **Follicular Phase**: Follicle-stimulating hormone (FSH) promotes the growth of follicles (Days 1-13).\n"
                "3. **Ovulation**: Release of the egg from the ovary (Around Day 14).\n"
                "4. **Luteal Phase**: Preparation of the uterus for potential pregnancy (Days 15-28).")

    elif user_query == "hygiene tips":
        return ("Here are some hygiene tips to follow during your menstrual cycle:\n"
                "1. Change sanitary products every 4-6 hours.\n"
                "2. Wash your hands before and after changing products.\n"
                "3. Use a mild soap and water for cleaning.\n"
                "4. Wear breathable cotton underwear.\n"
                "5. Stay hydrated and maintain a balanced diet.")

    elif user_query == "how to tackle problems":
        return ("Here are some ways to tackle common menstrual issues:\n"
                "1. **Cramping**: Use heat pads, take pain relievers, or practice relaxation techniques.\n"
                "2. **Mood Swings**: Regular exercise and mindfulness practices can help.\n"
                "3. **Heavy Flow**: Consult a healthcare provider for advice on management options.")

    else:
        return "I’m sorry, I didn’t understand that. Please type one of the following:\n- Menstrual Cycle Phases\n- Hygiene Tips\n- How to Tackle Problems"

while True:
    user_query = input("\nWould you like information on Menstrual Cycle Phases, Hygiene Tips, or How to Tackle Problems? (type 'exit' to stop): ")
    if user_query.lower() == 'exit':
        break

    info = provide_additional_info(user_query)
    print(info)